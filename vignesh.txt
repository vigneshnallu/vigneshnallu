package BusTicket.BusList;

import java.util.HashMap;
import java.util.List;

import BusTicket.BusList.ListOfBuses;

public interface BusTicketManager {
	public  void admin() throws Exception;
	public  void user() throws Exception;
	void addBuslist(int BusNo,String BusName,String BusSource,String BusDestination,String Class) throws Exception;
	void deleteBuslist(int BusNo) throws Exception;
	int NoOfBuses() throws Exception;
	HashMap<String,Integer> NoOfBuslist() throws Exception;
	List<ListOfBuses> SourceStationlist(String BusSource,String BusSource1) throws Exception;
}
==========BusList Implementation===========================
package BusTicket.BusList;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

import BusTicket.TestConnections;
import BusTicket.BusTiming.TestaddTiming;
import BusTicket.BusTiming.TestdeleteBusTiming;
import BusTicket.Passenger.TestAddPassenger;
import BusTicket.Passenger.TestdeletePassenger;
import BusTicket.Reservation.TestResrvationAllList;
import BusTicket.Reservation.TestaddReservationList;
import BusTicket.Reservation.TestdeleteReservationList;
import BusTicket.Reservation.TestupdateNoOfTicketReservation;
import BusTicket.SeatAvailability.TestAvailableSeats;
import BusTicket.SeatAvailability.TestaddSeatAvailability;
import BusTicket.SeatAvailability.TestupdateAvailableSeats;

public class BusTicketManagerImplimentation implements BusTicketManager {
	public void admin() throws Exception {

		System.out.println("Enter Admin_Name:");
		Scanner sc=new Scanner(System.in);
		String Admin=sc.next();
		System.out.println("Enter Password:");
		String pass=sc.next();
		BusTicketManagerImplimentation com=new BusTicketManagerImplimentation();
		if(com.AdminLogin(Admin,pass)) {
		System.out.println(">>>>LOGIN SUCESSFULL<<<<");
		//view order details
		System.out.println("1.Add BusList:\n2.2.Delete BusList:\n3.Delete PassengerList:\n4.Add BusTiming\n5.Delete BusTimimng\n6.Delete Reservationlist\n7.All ReservationList\n8.Add Seat Availability\n9.Update Seat Availability");
		int n=sc.nextInt();
		switch(n) {
		case 1:
			TestAddBusList.main(null);
			break;
		case 2:
			TestdeleteBuslist.main(null);
			break;
		case 3:
			TestdeletePassenger.main(null);
			break;
		case 4:
			TestaddTiming.main(null);
			break;
		case 5:
			TestdeleteBusTiming.main(null);
			break;
		case 6:
			TestdeleteReservationList.main(null);
			break;
		case 7:
			TestResrvationAllList.main(null);
			break;
		case 8:
			TestaddSeatAvailability.main(null);
			break;
		case 9:
			TestupdateAvailableSeats.main(null);
			break;
		}
		}
		else
		{
		System.out.println(">>>>LOGIN FAILED<<<<");
		}

		}
		public boolean AdminLogin(String Adminname, String pass) throws Exception
		{
			Connection con = TestConnections.getConnection();
				Statement stmt = con.createStatement();
		if (stmt.executeUpdate("select Admin_name from AdminRegister where Admin_name='" + Adminname + "'") != 0)
		{
		ResultSet rs = stmt.executeQuery("select pass_word from AdminRegister where Admin_name ='" + Adminname + "'");
		rs.next();
		if (pass.equals(rs.getString("pass_word")))
		{
		return true;
		}

		return false;
		}
		return false;
		}
// user Login
		

public boolean user(String name, String pass) throws Exception {

	Connection con = TestConnections.getConnection();
	Statement stmt = con.createStatement();
	if (stmt.executeUpdate("select name from UserRegister where name='" + name + "'") != 0)
	{
		ResultSet rs = stmt.executeQuery("select password from UserRegister where name='" + name + "'");
		rs.next();
		if (pass.equals(rs.getString("password")))
		{
			return true;
}

		return false;
}
	return false;
}
	public void user() throws Exception {
		System.out.println("Enter UserName:");
		Scanner sc=new Scanner(System.in);
		String name=sc.next();
		System.out.println("Enter Password:");
		String pass=sc.next();
		BusTicketManagerImplimentation com=new BusTicketManagerImplimentation();
	if(com.user(name,pass)) {
		System.out.println(">>>>LOGIN SUCESSFULL<<<<");
//view bus details
		System.out.println("1.No_Of_BusList:\n2.No_Of_Buses:\n3.Source And DestinationList:\n4.Available Seats:\n5:Add Passenger Details:\n6:Update PassengerDetails:\n7.Add ReservationList:\n8.Update No_Of_Ticket:");
		int n=sc.nextInt();
		switch(n) {
		case 1:
			System.out.println("No_Of_BusList:");
			TestNoOfBuslist.main(null);
			break;
		case 2:
			TestNoOfBuses.main(null);
			break;
		case 3:
			TestSourcelist.main(null);
			break;
		case 4:
			TestAvailableSeats.main(null);
			break;
		case 5:
			TestAddPassenger.main(null);
			break;
		case 6:
			TestaddReservationList.main(null);
			break;
		case 7:
			TestupdateNoOfTicketReservation.main(null);
			break;
		}
		
}
else
{
	System.out.println("--------LOGIN FAILED---------");
}

}

	
	public void addBuslist(int BusNo, String BusName, String BusSource, String BusDestination, String Class) throws Exception {
		
		//String sql="insert into bus_list (bus_no,bus_name,bus_source,bus_destination,class)values+ (?,?,?,?,?)";//prepared statement needed
		Connection con = TestConnections.getConnection();
		String sql="insert into bus_list (bus_no,bus_name,bus_source,bus_destination,class)values ("+BusNo+",'"+BusName+"','"+BusSource+"','"+BusDestination+"','"+Class+"')";
		System.out.println(sql);
		Statement stmt=con.createStatement();
		int row=stmt.executeUpdate(sql);
		System.out.println(row);
	
	
	}
	public void deleteBuslist(int BusNo) throws Exception {
		String sql="delete from bus_list where bus_no="+BusNo;
		System.out.println(sql);
		Connection con = TestConnections.getConnection();
		Statement stmt=con.createStatement();
		int row=stmt.executeUpdate(sql);
		System.out.println(row);
}
	 public int NoOfBuses() throws Exception {
		 String sql="select count(*) as busCount  from bus_list"; 
		 System.out.println(sql);
		 Connection con = TestConnections.getConnection();
			Statement stmt=con.createStatement();
			ResultSet rs=stmt.executeQuery(sql);
			rs.next();
			//System.out.println(""+rs.getInt("busCount"));	
			return rs.getInt("busCount");
		 
	}
	 public HashMap<String,Integer> NoOfBuslist() throws Exception{
		 String sql="select bus_name,bus_no from bus_list";
		 System.out.println(sql);
		 Connection con = TestConnections.getConnection();
			Statement stmt=con.createStatement();
			ResultSet rs=stmt.executeQuery(sql);
			HashMap<String,Integer> obj=new HashMap<String,Integer>();
			while(rs.next()) {
			//System.out.println(""+rs.getString("bus_name"));
				String name=rs.getString("bus_name");
					int num=rs.getInt("bus_no");
					obj.put(name,num );
			}
			
		 return obj;
	 }
	 public List<ListOfBuses> SourceStationlist(String BusSource,String BusSource1) throws Exception {
		 String sql="select *from bus_list where bus_source='"+BusSource+"' or bus_source='"+BusSource1+"'";
		 System.out.println(sql);
		 Connection con = TestConnections.getConnection();
			Statement stmt=con.createStatement();
			ResultSet rs=stmt.executeQuery(sql);
			List<ListOfBuses> Source= new ArrayList<ListOfBuses>();
			while(rs.next()) {
				ListOfBuses p = new ListOfBuses();
				p.BusNo=rs.getInt("bus_no");
				p.BusName=rs.getString("bus_name");
				p.BusSource=rs.getString("bus_source");
				p.BusDestination=rs.getString("bus_destination");
				p.Class=rs.getString("class");
				Source.add(p);
				
			}
		 return Source;
	 }
}
===============BusList Model====================================
package BusTicket.BusList;


	public class ListOfBuses extends BusTicketManagerImplimentation {
		
		public int BusNo;
		String BusName;
		String BusSource;
		String BusDestination;
		String Class;
		@Override
		public String toString() {
			return "ListOfBuses [BusNo=" + BusNo + ", BusName=" + BusName + ", BusSource=" + BusSource + ", BusDestination="
					+ BusDestination + ", Class=" + Class + "]";
			
		}
		
	
}
======================BusTiming Implementation======================
package BusTicket.BusTiming;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Date;

import BusTicket.TestConnections;

public class BusTimingIplementation implements TimingManager{
	public void addBusTiming(ListBusTiming obj) throws Exception {
		String sql="insert into bus_time(bus_no,amount,departure_time,arraival_time) values(?,?,?,?)";
		Connection con = TestConnections.getConnection();
		System.out.println(sql);
		PreparedStatement pst=con.prepareStatement(sql);
		pst.setInt(1,obj.BusNo);
		pst.setInt(2, obj.amount);
		pst.setTimestamp(3,java.sql.Timestamp.valueOf(obj.departureTime));
		pst.setTimestamp(4,java.sql.Timestamp.valueOf(obj.arrivalTime));
		int row=pst.executeUpdate();
		System.out.println(row);
	}
	public void deleteBusTiming(int BusNo) throws Exception{
		String sql="delete from bus_time where bus_no="+BusNo;
		System.out.println(sql);
		Connection con = TestConnections.getConnection();
		Statement stmt=con.createStatement();
		int row=stmt.executeUpdate(sql);
		System.out.println(row);		
	}
	
		

}

================================BusTiming Model===================
package BusTicket.BusTiming;

import java.sql.Date;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;

public class ListBusTiming {

	
			public int BusNo;
			public int amount;
			public LocalDateTime departureTime;
			public LocalDateTime arrivalTime;
			
			
			@Override
			public String toString() {
				return "ListBusTiming [BusNo=" + BusNo + ", amount=" + amount + ", departureTime=" + departureTime
						+ ", arrivalTime=" + arrivalTime + "]";
			}
			

}

